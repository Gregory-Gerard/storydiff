# Reverse-proxy for Chromatic GraphQL endpoint,
# hosted on my own server (at gregory-gerard.dev)

map $sent_http_set_cookie $auth_header {
  "~*(?<!-)\btoken\b=(?<token>[^;]+)" "Bearer $token";
}

map $http_authorization $sent_auth_header {
  "~*\bBearer\b (?<token>[^;]+)" "$token";
}

proxy_cache_path  /data/nginx/cache levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

server {
  listen 81 ssl;
  listen [::]:81 ssl;
  server_name chromatic.gregory-gerard.dev;

  ssl_certificate /etc/letsencrypt/live/chromatic.gregory-gerard.dev/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/chromatic.gregory-gerard.dev/privkey.pem;

  location / {
    set $upstream chromatic-index.herokuapp.com;

    resolver         1.1.1.1;

    proxy_pass       https://$upstream;
    proxy_ssl_server_name on;
    proxy_ssl_name   $upstream;

    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $upstream;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_redirect off;

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      #
      # Custom headers and headers various browsers *should* be OK with but aren't
      #
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #
      # Tell client that this pre-flight info is valid for 20 days
      #
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }
    if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Length,Content-Range' always;

      add_header 'Authorization' $auth_header always;
    }
    if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Length,Content-Range' always;
      add_header 'Authorization' $auth_header always;
    }
  }

  location /snapshots {
    set $upstream snapshots.chromatic.com;

    resolver         1.1.1.1;

    proxy_pass       https://$upstream;
    proxy_ssl_server_name on;
    proxy_ssl_name   $upstream;

    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $upstream;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Cookie "asset-token=$sent_auth_header;";

    proxy_cache            STATIC;
    proxy_cache_valid      200  1d;
    proxy_cache_use_stale  error timeout invalid_header updating
                           http_500 http_502 http_503 http_504;
    proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;

    proxy_redirect off;

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      #
      # Custom headers and headers various browsers *should* be OK with but aren't
      #
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #
      # Tell client that this pre-flight info is valid for 20 days
      #
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }
    if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Length,Content-Range' always;
    }
    if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Length,Content-Range' always;
    }
  }

  location ~ ^\/storybook\/(?<subdomain>[^\/]+) {
    set $upstream $subdomain.chromatic.com;

    resolver         1.1.1.1;

    proxy_pass       https://$upstream/?path=$arg_path&full=1&shortcuts=false&singleStory=true;
    proxy_ssl_server_name on;
    proxy_ssl_name   $upstream;

    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $upstream;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Cookie "asset-token=$sent_auth_header;";

    proxy_redirect off;

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      #
      # Custom headers and headers various browsers *should* be OK with but aren't
      #
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #
      # Tell client that this pre-flight info is valid for 20 days
      #
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }
    if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Length,Content-Range' always;
    }
    if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Length,Content-Range' always;
    }
  }
}
